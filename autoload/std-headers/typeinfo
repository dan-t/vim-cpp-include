/*  Copyright (C) 2015  Povilas Kanapickas <povilas@radix.lt>

    This file is part of cppreference-doc

    This work is licensed under the Creative Commons Attribution-ShareAlike 3.0
    Unported License. To view a copy of this license, visit
    http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to Creative
    Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.

    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3 or
    any later version published by the Free Software Foundation; with no
    Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
*/

#ifndef CPPREFERENCE_TYPEINFO_H
#define CPPREFERENCE_TYPEINFO_H

#include <exception>

namespace std {

class type_info {
public:
    virtual ~type_info();

    bool operator==(const type_info& rhs) const;
    bool operator!=(const type_info& rhs) const;

    bool before(const type_info& rhs) const;
#if CPPREFERENCE_STDVER>= 2011
    size_t hash_code() const;
#endif
    const char* name() const;
};

class bad_cast : public exception {
public:
    bad_cast();
};

class bad_typeid : public exception {
public:
    bad_typeid();
};

} // namespace std

#endif // CPPREFERENCE_TYPEINFO_H
