/*  Copyright (C) 2015  Povilas Kanapickas <povilas@radix.lt>

    This file is part of cppreference-doc

    This work is licensed under the Creative Commons Attribution-ShareAlike 3.0
    Unported License. To view a copy of this license, visit
    http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to Creative
    Commons, 444 Castro Street, Suite 900, Mountain View, California, 94041, USA.

    Permission is granted to copy, distribute and/or modify this document
    under the terms of the GNU Free Documentation License, Version 1.3 or
    any later version published by the Free Software Foundation; with no
    Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
*/

#ifndef CPPREFERENCE_CWCTYPE_H
#define CPPREFERENCE_CWCTYPE_H

namespace std {

typedef int wctrans_t; // actually unspecified
typedef int wctype_t; // actually unspefified
typedef int wint_t; // actually unspecified

#define WEOF 0
#define WCHAR_MIN 0
#define WCHAR_MAX 0

int iswalnum(std::wint_t ch);
int iswalpha(std::wint_t ch);
#if CPPREFERENCE_STDVER>= 2011
int iswblank(std::wint_t ch);
#endif
int iswcntrl(std::wint_t ch);
int iswdigit(std::wint_t ch);
int iswgraph(std::wint_t ch);
int iswlower(std::wint_t ch);
int iswprint(std::wint_t ch);
int iswpunct(std::wint_t ch);
int iswspace(std::wint_t ch);
int iswupper(std::wint_t ch);
int iswxdigit(std::wint_t ch);
std::wctype_t wctype(const char* str);
int iswctype(std::wint_t wc, std::wctype_t desc);
int towlower(std::wint_t ch);
int towupper(std::wint_t ch);
std::wctrans_t wctrans(const char* str);
std::wint_t towctrans(std::wint_t wc, std::wctrans_t desc);

} // namespace std

#endif // CPPREFERENCE_CWCTYPE_H
